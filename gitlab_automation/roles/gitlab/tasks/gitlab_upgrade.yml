---
- set_fact:
    k8s_cluster_deployed: "{{ setup.k8s_cluster.deployed }}"
    gitlab_port: "{{ config['gitlab-ce']['port'] }}"
    gitlab_reg_port: "{{ config['gitlab-ce']['registry_external_port'] }}"
    gitlab_ssh_port: "{{ config['gitlab-ce']['ssh_port'] }}"
    local_repo: "{{ setup['local_repo'] }}"
    gitlab_version: "{{ config['gitlab-ce']['components']['gitlab-ce']['tag'] }}"
    gitlab_config_tls_key: "{{ config['gitlab-ce']['ssl']['tls_key'] }}"
    gitlab_config_tls_cert: "{{ config['gitlab-ce']['ssl']['tls_cert'] }}"
    gitlab_upgrade_version: "{{ config['gitlab-ce']['components']['gitlab-ce']['tag'] }}"
  tags:
    - upgrade
    - never

- name: Check the gitlab upgrade image exists or not with the version name
  stat:
    path: "{{local_repo}}/gitlab-ce_{{gitlab_version}}.tar"
  register: stat_result
  tags:
    - upgrade
    - never

- fail:
    msg: "No gitlab-ce version : {{ gitlab_version }} is available"
  when: not stat_result.stat.exists
  tags: 
    - upgrade
    - never

- name: "List of images using crictl command"
  command: "crictl images --output json"
  register: images_list
  tags:
    - upgrade
    - never

- name: debug
  set_fact:
    json_data: "{{ images_list.stdout  }}"
  tags:
    - upgrade
    - never

- set_fact:
    image_available: True
  when: "'gitlab-ce:{{gitlab_version}}' in item.repoTags[0]"
  loop: "{{ json_data.images }}"
  tags:
    - upgrade
    - never

- name: "Import the GitLab tar file from local repo"
  command: "ctr image import {{local_repo}}/gitlab-ce-{{gitlab_version}}.tar"
  when: not image_available 
  tags:
    - upgrade
    - never

- name: Termination the lower version of gitlab application from the staging directory
  kubernetes.core.k8s:
    state: absent
    src: "{{ gitlab_compose_dir }}/{{ item.dst }}"
    validate:
      fail_on_error: yes
  loop:
    - { dst: gitlab-deployment.yml }
  tags:
    - upgrade
    - never

- name: Delete GitLab deployment file from staging directory
  ansible.builtin.file:
    state: absent
    path: "{{ gitlab_compose_dir }}/{{ item.dst }}"
  loop:
    - { dst: gitlab-deployment.yml }
  tags:
    - upgrade
    - never

- name: Rename the gitlab_version_name to gitlab_version
  set_fact:
    gitlab_version: "{{ gitlab_upgrade_version }}"
  tags:
    - upgrade
    - never

- name: Template gitlab configs
  template:
    src: "{{ item.src }}"
    dest: "{{ gitlab_compose_dir }}/{{ item.dst }}"
    mode: 0744
  with_items:
    - { src: gitlab/gitlab-deployment.yml.j2, dst: gitlab-deployment.yml }
  register: launcher_state_primary
  tags:
    - upgrade
    - never

- name: Upgrade the gitlab application and also upgrade from the staging directory
  kubernetes.core.k8s:
    state: present
    src: "{{ gitlab_compose_dir }}/{{ item.dst }}"
    validate:
      fail_on_error: yes
  loop:
    - { dst: gitlab-deployment.yml }
  tags:
    - upgrade
    - never

- name: pause for few mins to delete and upgrade the gitlab
  ansible.builtin.pause:
    minutes: "{{ mins | default(5)}}"
  tags:
    - upgrade
    - never

- name: "Checking the connectivity of the Gitlab"
  include_tasks: 
    file: gitlab_connectivity_check.yml
    apply:
      tags:
        - upgrade
        - never
  tags:
    - upgrade
    - never

